{"version":3,"sources":["logo.svg","components/navbar.jsx","components/counter.jsx","components/counters.jsx","App.js","index.js"],"names":["module","exports","navbar","props","state","className","href","this","totalCounters","Component","Counter","fontSize","counter","tags","styles","fontWeight","handleIncrement","onIncrement","handleDecrement","value","onDecrement","style","getBadgeClasses","formatValue","onClick","onDelete","classes","length","Fragment","map","tag","key","Counters","inputField","updateInput","evt","setState","target","handleAddNewItem","onAdding","document","getElementById","reset","handlePostNewItem","a","fetch","method","headers","Accept","body","JSON","stringify","update","handleGetRemoveByName","name","concat","handleGetServerClearList","counters","onReset","onClear","id","bind","type","onChange","placeholder","App","handleDelete","counterId","filter","c","console","log","handleReset","indexOf","handleAddition","inputText","nextValue","handleClear","updateFromServer","then","response","json","arr","obj","push","catch","error","ReactDOM","render"],"mappings":"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","file":"static/js/main.4406df64.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\n\nclass navbar extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <nav className=\"navbar navbar-light bg-light\">\n                    <a className=\"navbar-brand\" href=\"#\"> 小鳄鱼动物森友会排队插件 {\" \"}\n                        <span className=\"badge badge-pill badge-secondary\">\n                            当前队列：{this.props.totalCounters}</span></a>\n                </nav>\n            </div>\n        )\n    }\n}\n\nexport default navbar\n","import React, { Component } from \"react\";\r\n\r\nclass Counter extends Component {\r\n  state = {\r\n    //value: this.props.counter.value,\r\n    fontSize: this.props.counter.fontSize,\r\n    tags: [\"List1\"]\r\n  };\r\n\r\n  styles = {\r\n    fontSize: this.state.fontSize,\r\n    fontWeight: \"bold\"\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      //   <React.Fragment>\r\n      //     <span style={this.styles} className={this.getBadgeClasses()}>\r\n      //       {this.formatCount()}\r\n      //     </span>\r\n      //     <button className=\"btn btn-secondary btm-sm\">Increment</button>\r\n      //   </React.Fragment>\r\n      //<div>{this.renderTags()}</div>\r\n\r\n      <div>\r\n        <span style={this.styles} className={this.getBadgeClasses()}>\r\n          {this.formatValue()}\r\n        </span>\r\n        {/* <button\r\n          onClick={this.handleIncrement}\r\n          className=\"btn btn-success btn-sm m-2\"\r\n        >\r\n          Increment\r\n        </button>\r\n        <button\r\n          onClick={this.handleDecrement}\r\n          className=\"btn btn-secondary btn-sm m-2\"\r\n        >\r\n          Decrement\r\n        </button> */}\r\n        <button\r\n          onClick={() => this.props.onDelete(this.props.counter.value)}\r\n          className=\"btn btn-danger btn-sm m-2\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleIncrement = () => {\r\n    this.props.onIncrement(this.props.counter);\r\n  };\r\n\r\n  handleDecrement = () => {\r\n    if (this.props.counter.value != 0)\r\n      this.props.onDecrement(this.props.counter);\r\n  };\r\n\r\n  getBadgeClasses() {\r\n    let classes = \"badge m-2 badge-\";\r\n    classes += this.props.counter.value === 0 ? \"info\" : \"primary\";\r\n    return classes;\r\n  }\r\n\r\n  formatValue() {\r\n    let value = this.props.counter.value;\r\n\r\n    // if (value === 0) {\r\n    //   return \"Zero\";\r\n    // } else {\r\n    //   return value;\r\n    // }\r\n    //console.log(\"Value: \", value);\r\n    return value;\r\n  }\r\n\r\n  renderTags() {\r\n    if (this.state.tags.length === 0)\r\n      return (\r\n        <React.Fragment>\r\n          <p>Please create a new Tag</p>\r\n          <p>There are no tags</p>\r\n        </React.Fragment>\r\n      );\r\n\r\n    return (\r\n      <ul>\r\n        {this.state.tags.map(tag => (\r\n          <li key={tag}>{tag}</li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import React, { Component } from \"react\";\r\nimport Counter from \"./counter\";\r\n\r\nclass Counters extends Component {\r\n\r\n  state = {\r\n    inputField: \"\"\r\n  }\r\n\r\n  updateInput = (evt) => {\r\n    this.setState({ inputField: evt.target.value });\r\n  }\r\n\r\n  handleAddNewItem = () => {\r\n    this.props.onAdding(this.state.inputField);\r\n    this.setState({ inputField: \"\" });\r\n    document.getElementById(\"inputForm\").reset();\r\n  }\r\n\r\n  handlePostNewItem = async () => {\r\n    await fetch('/addUser', {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        value: this.state.inputField\r\n      }),\r\n    });\r\n\r\n    this.setState({ inputField: \"\" });\r\n    document.getElementById(\"inputForm\").reset();\r\n\r\n    this.props.update();\r\n  }\r\n\r\n  handleGetRemoveByName = async (name) => {\r\n    await fetch('/removeUserByName?name='.concat(name), {\r\n      method: 'GET',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    this.props.update();\r\n  }\r\n\r\n  handleGetServerClearList = async () => {\r\n    await fetch('/clearUserList', {\r\n      method: 'GET',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    this.props.update();\r\n  }\r\n\r\n  render() {\r\n\r\n    const { counters, onIncrement, onDecrement, onDelete, onReset, onAdding, onClear } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div>\r\n          {counters.map(counter => (\r\n            <Counter\r\n              key={counter.id}\r\n              counter={counter}\r\n              onDelete={this.handleGetRemoveByName}\r\n              onIncrement={onIncrement}\r\n              onDecrement={onDecrement}\r\n            ></Counter>\r\n          ))}\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <span className=\"input-group-btn\">\r\n            <button\r\n              onClick={this.handlePostNewItem.bind(this)}\r\n              className=\"btn btn-success btn-la m-2\"\r\n            >Add</button>\r\n          </span>\r\n          <form className=\"col-xs-2 m-2\" id=\"inputForm\">\r\n            <input type=\"text\" onChange={this.updateInput} className=\"form-control\" placeholder=\"Name\"></input>\r\n          </form>\r\n        </div>\r\n        <button\r\n          onClick={onReset}\r\n          className=\"btn btn-warning btn-la m-2\"\r\n        >\r\n          Reset\r\n        </button>\r\n        <button\r\n          onClick={this.handleGetServerClearList}\r\n          className=\"btn btn-danger btn-la m-2\">Clear</button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counters;\r\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\n//import \"./App.css\";\nimport NavBar from './components/navbar'\nimport Counters from \"./components/counters\";\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.updateFromServer = this.updateFromServer.bind(this);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <NavBar totalCounters={this.state.counters.length} />\n                <main className=\"App\">\n                    <Counters\n                        counters={this.state.counters}\n                        onReset={this.handleReset}\n                        onIncrement={this.handleIncrement}\n                        onDecrement={this.handleDecrement}\n                        onDelete={this.handleDelete}\n                        onAdding={this.handleAddition}\n                        onClear={this.handleClear}\n                        update={this.updateFromServer} />\n                </main>\n            </React.Fragment>\n        );\n    }\n\n    state = {\n        counters: [\n            // { id: 1, value: 0, fontSize: 15 },\n            // { id: 2, value: 0, fontSize: 15 },\n            // { id: 3, value: 0, fontSize: 15 },\n            // { id: 4, value: 0, fontSize: 15 },\n            // { id: 5, value: 0, fontSize: 15 }\n        ]\n    };\n\n    componentDidMount() {\n        this.updateFromServer();\n    }\n\n    updateFromServer() {\n        return fetch('https://acqbackend.herokuapp.com/getUserList')\n            .then((response) => response.json())\n            .then((json) => {\n                var arr = [];\n\n                for (var obj in json) {\n                    arr.push(obj);\n                }\n                this.setState({ counters: json });\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n    }\n\n    handleDelete = counterId => {\n        const counters = this.state.counters.filter(c => c.id != counterId);\n        this.setState({ counters: counters });\n\n        console.log(counterId, \" deleted\");\n    };\n\n    handleReset = () => {\n        const counters = this.state.counters.map(c => {\n            c.value = 0;\n            return c;\n        });\n\n        this.setState({ counters: counters });\n    };\n\n    handleIncrement = counter => {\n        const counters = [...this.state.counters];\n        counters[counters.indexOf(counter)].value++;\n        this.setState({ counters: counters });\n    };\n\n    handleDecrement = counter => {\n        const counters = [...this.state.counters];\n        counters[counters.indexOf(counter)].value--;\n        this.setState(counters);\n    };\n\n    handleAddition = (inputText) => {\n        if (inputText.length == 0 || this.state.counters.filter(c => c.value === inputText).length >= 1)\n            return;\n        let nextValue;\n        if (this.state.counters.length > 0) {\n            nextValue = this.state.counters[this.state.counters.length - 1].id + 1;\n        } else {\n            nextValue = 0;\n        }\n        console.log(\"New ID value: \", nextValue);\n        console.log(\"InputText: \", inputText);\n        this.setState({ counters: this.state.counters.concat({ id: nextValue, value: inputText, fontSize: 15 }) });\n    }\n\n    handleClear = () => {\n        this.setState({ counters: [] });\n    }\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport App from './App'\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}